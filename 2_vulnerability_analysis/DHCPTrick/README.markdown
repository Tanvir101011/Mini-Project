# DHCPTrick

## Description
DHCPTrick is a Python tool for studying DHCP vulnerabilities in your private lab. It sends spoofed DHCP Discover packets to exhaust IP pools, logging requests in text and JSON formats, inspired by DHCPig. Designed for personal experimentation, it targets DHCP servers you own or have explicit permission to test, such as a lab router in your home network.

**Important**: Use DHCPTrick only on networks you own or have clear permission to test. Unauthorized DHCP attacks are illegal and may cause network disruptions or legal consequences. The tool is restricted to your lab to ensure ethical use.

## Features
- **DHCP Starvation**: Sends spoofed DHCP Discover packets.
- **JSON Output**: Saves results in JSON for parsing/automation.
- **MAC Spoofing**: Uses random MAC addresses.
- **Configurable**: Supports interface, target IP, and packet rate.
- **Logging**: Saves results to `dhcptrick.log` and timestamped files.
- **Quiet Mode**: Minimizes terminal output.
- **Educational**: Simple design for learning DHCP vulnerabilities.

## Installation
1. **Requirements**:
   - Linux (e.g., Ubuntu 24.04, verify with `uname -a`).
   - Python 3.12+ (verify with `python3 --version`).
   - Network interface (e.g., `eth0`, verify with `ip link`).
   - Root privileges (`sudo`).
   - Private network you control.
2. **Install Dependencies**:
   - Save `setup_dhcptrick.sh` to a directory (e.g., `/home/user/dhcptrick/`).
   - Make executable and run:
     ```bash
     chmod +x setup_dhcptrick.sh
     ./setup_dhcptrick.sh
     ```
   - Installs `scapy` and `netifaces`.
3. Save `dhcptrick.py` to the same directory.
4. Verify:
   ```bash
   sudo python3 dhcptrick.py --help
   ```

## Usage
DHCPTrick sends DHCP Discover packets to study server behavior. Below are examples and expected outcomes.

### Basic Commands
Run DHCP starvation:
```bash
sudo python3 dhcptrick.py -i eth0 -t 192.168.1.1 -r 5
```

Run in quiet mode:
```bash
sudo python3 dhcptrick.py -i eth0 -t 192.168.1.1 -r 2 -q
```

### Options
- `-i, --interface`: Network interface (required, e.g., `eth0`).
- `-t, --target-ip`: Target IP (default: `192.168.1.1`).
- `-r, --rate`: Packet rate (packets/second, default: 1).
- `-q, --quiet`: Log to file only.

### Features

#### DHCP Starvation
- **Purpose**: Exhaust DHCP server IP pool.
- **Usage**:
  ```bash
  sudo python3 dhcptrick.py -i eth0 -t 192.168.1.1 -r 5
  ```
- **Output**:
  ```
  2025-05-15 12:39:00 - Starting DHCPTrick on eth0, target: 192.168.1.1, rate: 5/s
  2025-05-15 12:39:01 - Sent packet #1: Ether / IP / UDP / BOOTP / DHCP
  ```
- **Result File** (`dhcptrick_results_20250515_123900.txt`):
  ```
  [2025-05-15 12:39:01] Sent packet #1: Ether / IP / UDP / BOOTP / DHCP
  ```
- **JSON File** (`dhcptrick_results_20250515_123900.json`):
  ```json
  {
    "interface": "eth0",
    "target_ip": "192.168.1.1",
    "results": [
      {"packet": 1, "summary": "Sent packet #1: Ether / IP / UDP / BOOTP / DHCP"}
    ],
    "total_packets": 1,
    "timestamp": "2025-05-15 12:39:01"
  }
  ```
- **Tips**: Monitor with Wireshark (`sudo wireshark -i eth0`); test client IP assignment (`dhclient eth0`).

#### Quiet Mode
- **Purpose**: Reduce terminal output.
- **Usage**:
  ```bash
  sudo python3 dhcptrick.py -i eth0 -t 192.168.1.1 -q
  ```
- **Tips**: Check `dhcptrick.log` with `tail -f dhcptrick.log`.

### Workflow
1. Set up lab (VM with DHCP server at `192.168.1.1`).
2. Install dependencies:
   ```bash
   ./setup_dhcptrick.sh
   ```
3. Run attack:
   ```bash
   sudo python3 dhcptrick.py -i eth0 -t 192.168.1.1 -r 5 -q
   ```
4. Check logs/results (text/JSON); verify with Wireshark.
5. Stop with `Ctrl+C`; secure outputs (`rm dhcptrick_*.txt dhcptrick_*.json`).

## Output
- **Logs**: `dhcptrick.log`.
- **Results**: `dhcptrick_results_<timestamp>.txt` and `.json`, e.g.:
  ```
  [2025-05-15 12:39:01] Sent packet #1: Ether / IP / UDP / BOOTP / DHCP
  [2025-05-15 12:39:02] Total packets sent: 1
  ```

## Notes
- **Environment**: Use on authorized networks (e.g., lab network).
- **Root**: Requires `sudo` for Scapy.
- **Impact**: May cause DoS; test in isolated setups.
- **Ethics**: Avoid unauthorized use to prevent legal/network issues.

## Disclaimer
**Personal Use Only**: DHCPTrick is for learning on networks you own or have permission to test. Unauthorized use is illegal and may cause disruptions or legal consequences. Ensure compliance with local laws.

**Safe Use**:
- Use in a private lab (e.g., VM with DHCP server).
- Secure outputs (`dhcptrick.log`, `dhcptrick_results_*.txt/json`); delete after use.
- No warranty; use at your own risk.

**Avoid**:
- Public/corporate networks without permission.
- Sharing sensitive output files.
- Production networks to prevent outages.

## Limitations
- Focuses on DHCP starvation; DHCPig may include more attacks.
- Basic implementation; no advanced DHCP options.
- Effectiveness depends on network (e.g., DHCP Snooping).

## Tips
- Verify interface (`ip link`).
- Ping target (`ping 192.168.1.1`).
- Monitor with Wireshark.
- Test mitigations (e.g., DHCP Snooping).
- Isolate setup to avoid misuse.

## License
For personal educational use; no formal license. Use responsibly.