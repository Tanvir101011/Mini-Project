# SecAudit

## Description
SecAudit is a Python tool for auditing Linux system security configurations in your private lab. It checks file permissions (e.g., /etc/passwd), SSH settings, and open ports, generating reports to study system hardening, inspired by Lynis. Designed for personal experimentation, it targets systems you own or have explicit permission to test, such as a local Ubuntu VM in your home lab.

**Important**: Use SecAudit only on systems you own or have clear permission to test. Unauthorized access or auditing is illegal and may lead to legal consequences or security issues. The tool is restricted to your lab to ensure ethical use.

## Features
- **File Permission Checks**: Verifies /etc/passwd permissions and ownership.
- **SSH Configuration**: Checks for risky settings (e.g., root login).
- **Port Scanning**: Lists open ports using netstat.
- **Reporting**: Saves results to `secaudit.log`, timestamped files, and a user-specified report.
- **Quiet Mode**: Minimizes terminal output.
- **Educational**: Simple design for learning system security.

## Installation
1. **Requirements**:
   - Linux (e.g., Ubuntu 24.04, verify with `uname -a`).
   - Python 3.12+ (verify with `python3 --version`).
   - Root privileges (`sudo`).
   - Private system you control (e.g., VM).
2. **Install Dependencies**:
   - Save `setup_secaudit.sh` to a directory (e.g., `/home/user/secaudit/`).
   - Make executable and run:
     ```bash
     chmod +x setup_secaudit.sh
     ./setup_secaudit.sh
     ```
   - Installs `net-tools` for netstat.
3. Save `secaudit.py` to the same directory.
4. Verify:
   ```bash
   sudo python3 secaudit.py --help
   ```

## Usage
SecAudit audits system configurations to identify security weaknesses. Below are examples and expected outcomes.

### Basic Commands
Run audit with default output:
```bash
sudo python3 secaudit.py -o report.txt
```

Run in quiet mode:
```bash
sudo python3 secaudit.py -o report.txt -q
```

### Options
- `-o, --output`: Output report file (default: `secaudit_report.txt`).
- `-q, --quiet`: Log to file only.

### Features

#### File Permission Checks
- **Purpose**: Ensure critical files have correct permissions.
- **Usage**:
  ```bash
  sudo python3 secaudit.py -o report.txt
  ```
- **Output**:
  ```
  2025-05-15 12:50:00 - Starting SecAudit
  2025-05-15 12:50:01 - OK: /etc/passwd permissions and owner correct
  ```
- **Result File** (`secaudit_report_20250515_125000.txt`):
  ```
  [2025-05-15 12:50:01] OK: /etc/passwd permissions and owner correct
  ```
- **Tips**: Check permissions manually (`ls -l /etc/passwd`).

#### SSH Configuration
- **Purpose**: Identify risky SSH settings.
- **Output Example**:
  ```
  Warning: SSH allows root login (PermitRootLogin yes)
  ```
- **Tips**: Edit `/etc/ssh/sshd_config` to test mitigations.

#### Port Scanning
- **Purpose**: List open ports.
- **Output Example**:
  ```
  Info: Open ports detected:
    tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN
  ```
- **Tips**: Verify with `netstat -tuln`.

#### Quiet Mode
- **Purpose**: Reduce terminal output.
- **Usage**:
  ```bash
  sudo python3 secaudit.py -o report.txt -q
  ```
- **Tips**: Check `secaudit.log` with `tail -f secaudit.log`.

### Workflow
1. Set up lab (Ubuntu VM).
2. Install dependencies:
   ```bash
   ./setup_secaudit.sh
   ```
3. Run audit:
   ```bash
   sudo python3 secaudit.py -o report.txt -q
   ```
4. Check logs/report; verify findings manually.
5. Stop with `Ctrl+C`; secure outputs (`rm secaudit_*.txt`).

## Output
- **Logs**: `secaudit.log`.
- **Results**: `secaudit_report_<timestamp>.txt` and user-specified report, e.g.:
  ```
  [2025-05-15 12:50:01] OK: /etc/passwd permissions and owner correct
  [2025-05-15 12:50:02] Audit complete
  ```

## Notes
- **Environment**: Use on authorized systems (e.g., local VM).
- **Root**: Requires `sudo` for file/port access.
- **Impact**: Minimal, but unauthorized auditing is illegal.
- **Ethics**: Avoid unauthorized use to prevent legal/security issues.

## Disclaimer
**Personal Use Only**: SecAudit is for learning on systems you own or have permission to test. Unauthorized use is illegal and may lead to legal consequences or security issues. Ensure compliance with local laws.

**Safe Use**:
- Use in a private lab (e.g., Ubuntu VM).
- Secure outputs (`secaudit.log`, `secaudit_report_*.txt`); delete after use.
- No warranty; use at your own risk.

**Avoid**:
- Public/corporate systems without permission.
- Sharing sensitive output files.
- Production systems to prevent disruptions.

## Limitations
- Checks limited to /etc/passwd, SSH, ports; Lynis covers more areas.
- Basic checks; no advanced analysis or scoring.
- Depends on system configuration and tool availability (netstat).

## Tips
- Install net-tools (`sudo apt install net-tools`).
- Verify SSH config (`cat /etc/ssh/sshd_config`).
- Test mitigations (e.g., `chmod 644 /etc/passwd`, disable root login).
- Isolate setup to avoid misuse.

## License
For personal educational use; no formal license. Use responsibly.